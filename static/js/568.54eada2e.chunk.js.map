{"version":3,"file":"static/js/568.54eada2e.chunk.js","mappings":"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","sources":["components/ApiFetch/ApiFetch.js","components/Loader/Loader.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["// key: bb3421bd0819dc82dbf8039d45c8f34c\n\nimport toast from 'react-hot-toast';\n\nconst API_KEY = 'bb3421bd0819dc82dbf8039d45c8f34c';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n// метод получения массива популярных фильмов. Total_pages = 1000 по дефолту.\nexport const fetchPopular = async () => {\n  try {\n    const url = `${BASE_URL}trending/movie/day?api_key=${API_KEY}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.log(error, 'fetchPopular');\n  }\n};\n\n// метод получения массива фильмов по запросу.\nexport const fetchByQuery = async searchQuery => {\n  try {\n    const url = `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&include_adult=false`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// метод получения инфо о фильме по айдишке\nexport const fetchById = async movieId => {\n  try {\n    const url = `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    toast.error('Something vent wrong:(');\n    console.log(error);\n  }\n};\n\n// актеры\nexport const fetchCredits = async movieId => {\n  try {\n    const url = `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    toast.error('Something vent wrong:(');\n    console.log(error);\n  }\n};\n\n//отзывы\nexport const fetchReviews = async movieId => {\n  try {\n    const url = `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    toast.error('Something vent wrong:(');\n    console.log(error);\n  }\n};","import React from 'react';\nimport { BallTriangle } from 'react-loader-spinner';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nexport function Loader() {\n  return (\n    <Wrapper>\n      <BallTriangle\n        height={100}\n        width={100}\n        radius={5}\n        color=\"#3911be\"\n        ariaLabel=\"ball-triangle-loading\"\n        wrapperClass={{}}\n        wrapperStyle=\"\"\n        visible={true}\n      />\n      ;\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nLoader.propTypes = {\n  query: PropTypes.string,\n};","import { useParams} from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetchReviews } from '../../components/ApiFetch/ApiFetch.js';\nimport styled from 'styled-components';\nimport { Loader } from \"components/Loader/Loader.jsx\";\n\nconst Reviews = () => {\n     const [state, setState] = useState({\n        items: [],\n        loading: false,\n        error: null,\n    });\n    const { id } = useParams();\n    \n       useEffect(() => {\n           const fetchMovie = async () => {\n               try {\n                 setState(prevState => ({\n                ...prevState,\n                     loading: true,\n                error: null,\n            }));\n                const result = await fetchReviews(id);\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        items: result.results,\n                    }\n                })\n            } catch (error) {\n                setState(prevState => ({\n                    ...prevState,\n                    error,\n                }))\n            }\n            finally {\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        loading: false,\n                    }\n                })\n            }\n        };\n        fetchMovie();\n       }, [id, setState]);    \n    \n    const { items } = state;\n    const elements = items.map(({ id, author, content }) => (\n        <SItem key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n        </SItem>\n    ));\n\n    return (\n        <div>\n      <STitle>Reviews</STitle>\n      {state.loading && <Loader />}\n      {items.length > 0 ? (\n        <SList>\n          {elements}\n        </SList>\n      ) : (\n        <SInfo>There is no reviews... yet</SInfo>\n      )}\n    </div>\n  );\n};\n\nconst STitle = styled.h2`\n  margin: 0 0 0 30px;\n`;\n\nconst SList = styled.ul`\n  padding: 10px;\n  margin: 0;\n`;\n\nconst SItem = styled.li`\n  list-style: none;\n  margin: 0 30px;\n  & h3 {\n    margin: 10px 0;\n  }\n  & p {\n    margin-bottom: 30px;\n  }\n`;\n\nconst SInfo = styled.p`\n  margin-left: 30px;\n  font-size: 20px;\n`;\n\nexport default Reviews;"],"names":["API_KEY","BASE_URL","fetchPopular","url","fetch","response","json","data","results","console","log","fetchByQuery","searchQuery","fetchById","movieId","toast","fetchCredits","fetchReviews","Loader","Wrapper","height","width","radius","color","ariaLabel","wrapperClass","wrapperStyle","visible","styled","STitle","SList","SItem","SInfo","useState","items","loading","error","state","setState","id","useParams","useEffect","fetchMovie","prevState","result","elements","map","author","content","length"],"sourceRoot":""}