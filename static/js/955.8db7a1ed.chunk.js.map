{"version":3,"file":"static/js/955.8db7a1ed.chunk.js","mappings":"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","sources":["components/ApiFetch/ApiFetch.js","components/MovieList/MovieList.jsx","components/MovieSearchForm/MovieSearchForm.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["// key: bb3421bd0819dc82dbf8039d45c8f34c\n\nimport toast from 'react-hot-toast';\n\nconst API_KEY = 'bb3421bd0819dc82dbf8039d45c8f34c';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n// метод получения массива популярных фильмов. Total_pages = 1000 по дефолту.\nexport const fetchPopular = async () => {\n  try {\n    const url = `${BASE_URL}trending/movie/day?api_key=${API_KEY}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.log(error, 'fetchPopular');\n  }\n};\n\n// метод получения массива фильмов по запросу.\nexport const fetchByQuery = async searchQuery => {\n  try {\n    const url = `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&include_adult=false`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// метод получения инфо о фильме по айдишке\nexport const fetchById = async movieId => {\n  try {\n    const url = `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    toast.error('Something vent wrong:(');\n    console.log(error);\n  }\n};\n\n// актеры\nexport const fetchCredits = async movieId => {\n  try {\n    const url = `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    toast.error('Something vent wrong:(');\n    console.log(error);\n  }\n};\n\n//отзывы\nexport const fetchReviews = async movieId => {\n  try {\n    const url = `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    toast.error('Something vent wrong:(');\n    console.log(error);\n  }\n};","import { Link, useLocation } from \"react-router-dom\";\n\nconst MovieList = ({ items }) => {\n    const location = useLocation();\n    const elements = items.map(({ id, title }) => <li key={id}>\n        <Link state={{from: location}} to={`/movies/${id}`}>{title}</Link>\n    </li>);\n    return <ul>{elements}</ul>\n}\n\nexport default MovieList;\n\nMovieList.defaultProps = {\n    items:[]\n}","import { useState } from \"react\";\n\nconst MovieSearchForm = ({onSubmit}) => {\n    const [state, setState] = useState({\n        search: \"\"\n    });\n\n    const handleChange = ({ target }) => {\n        const { name, value } = target;\n        setState({\n            ...state,\n            [name]: value,\n        })\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({ ...state });\n        setState({\n            search: \"\"\n        })\n    };\n    \n    return (\n        <form onSubmit={handleSubmit}>\n            <input name=\"search\"\n                type=\"text\"\n                value={state.search}\n                onChange={handleChange}\n                placeholder=\"Поиск\" required />\n            <button type=\"submit\">Искать</button>\n        </form>\n    )\n};\n\nexport default MovieSearchForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__+-Cnt\"};","import { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport MovieSearchForm from \"components/MovieSearchForm/MovieSearchForm\";\nimport { fetchByQuery } from \"components/ApiFetch/ApiFetch\";\nimport MovieList from \"components/MovieList/MovieList.jsx\";\nimport s from \"../Movies/Movies.module.css\";\n\nconst Movies = () => {\n    const [state, setState] = useState({\n        items: [],\n        loading: false,\n        error: null,\n    });\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const search = searchParams.get(\"search\");\n\n    useEffect(() => {\n        const fetchMovie = async () => {\n            try {\n                setState(prevState => ({\n                    ...prevState,\n                    loading: true,\n                }))\n                const data = await fetchByQuery(search);\n                setState(prevState => ({\n                    ...prevState,\n                    items: data,\n                }))\n            } catch (error) {\n                setState(prevState => ({\n                    ...prevState,\n                    error,\n                }))\n            }\n            finally {\n                setState(prevState => ({\n                    ...prevState,\n                    loading: false,\n                }))\n            }\n        };\n        if (search) {\n            fetchMovie()\n        }\n    }, [search]);\n\n    const changeSearch = ({ search }) => {\n        setSearchParams({search});\n     };\n\n    const { items } = state;\n    return (\n        <div className={s.container}>\n            <MovieSearchForm onSubmit={changeSearch} />\n            {items.length > 0 && <MovieList items={items}/>}\n        </div>\n    )\n};\n\n\nexport default Movies;"],"names":["API_KEY","BASE_URL","fetchPopular","url","fetch","response","json","data","results","console","log","fetchByQuery","searchQuery","fetchById","movieId","toast","fetchCredits","MovieList","items","location","useLocation","elements","map","id","title","state","from","to","defaultProps","onSubmit","useState","search","setState","e","preventDefault","name","type","value","onChange","target","placeholder","required","loading","error","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchMovie","prevState","className","s","length"],"sourceRoot":""}